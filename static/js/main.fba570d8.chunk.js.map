{"version":3,"sources":["hooks/useFetch.js","components/Loading.js","components/Brochures.js","components/Error.js","components/Brochure.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","useState","loading","setLoading","data","setData","fetchData","a","fetch","resp","json","useEffect","Loading","Brochures","feed","entry","map","gsx$active","$t","gsx$property","to","gsx$alias","Error","Brochure","alias","useParams","single","find","getBrochure","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAEaA,EAAW,SAACC,GAAS,IAAD,EACDC,oBAAS,GADR,mBACxBC,EADwB,KACfC,EADe,OAEPF,mBAAS,MAFF,mBAExBG,EAFwB,KAElBC,EAFkB,KAIzBC,EAAS,uCAAG,8BAAAC,EAAA,6DAChBJ,GAAW,GADK,SAEGK,MAAMR,GAFT,cAEVS,EAFU,gBAGGA,EAAKC,OAHR,OAGVN,EAHU,OAIhBD,GAAW,GACXE,EAAQD,GALQ,2CAAH,qDAYf,OAJAO,qBAAU,WACRL,MACC,IAEI,CAAEF,OAAMF,YCRFU,EARC,WACd,OACE,8BACE,sDCGAZ,EAAG,qDAHQ,+CAGR,YAFS,KAET,2BAuBMa,EArBG,WAAO,IAAD,EACId,EAASC,GAA3BE,EADc,EACdA,QAASE,EADK,EACLA,KAEjB,OACE,gCACGF,GAAW,cAAC,EAAD,IACXE,GACCA,EAAKU,KAAKC,MAAMC,KAAI,SAACZ,GACnB,GAA2B,OAAvBA,EAAKa,WAAWC,GAClB,OACE,gCACE,6BAAKd,EAAKe,aAAaD,KACvB,cAAC,IAAD,CAAME,GAAE,gBAAWhB,EAAKiB,UAAUH,IAAlC,6BAFQd,EAAKiB,UAAUH,W,OCVxBI,EARD,WACZ,OACE,8BACE,8DCEAtB,EAAG,qDAFQ,+CAER,YADS,KACT,2BAgCMuB,EA9BE,WAAO,IAAD,EACKxB,EAASC,GAA3BE,EADa,EACbA,QAASE,EADI,EACJA,KAEToB,EAAUC,cAAVD,MAYFE,EAVc,WAClB,GAAItB,EAKF,OAJeA,EAAKU,KAAKC,MAAMY,MAC7B,SAACvB,GAAD,OAAUA,EAAKiB,UAAUH,KAAOM,KAOvBI,GAEf,OACE,gCACG1B,GAAW,cAAC,EAAD,IACXE,GACC,8BACE,6BAAKsB,EAAOP,aAAaD,OAG7B,6DCPSW,EArBH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,UACE,uDACA,cAAC,EAAD,OAGF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,YCRKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fba570d8.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport const useFetch = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState(null);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    const resp = await fetch(url);\r\n    const data = await resp.json();\r\n    setLoading(false);\r\n    setData(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return { data, loading };\r\n};\r\n","import React from 'react';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div>\r\n      <h1>Loading data ... </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useFetch } from '../hooks/useFetch';\r\nimport Loading from './Loading';\r\n\r\nconst gsheetID = '1z-rXlasV9g2PerZz8uiVtuCEmY192U0LyJA3oWyo9i8';\r\nconst gsheetNum = '10';\r\n\r\nconst url = `https://spreadsheets.google.com/feeds/list/${gsheetID}/${gsheetNum}/public/values?alt=json`;\r\n\r\nconst Brochures = () => {\r\n  const { loading, data } = useFetch(url);\r\n\r\n  return (\r\n    <div>\r\n      {loading && <Loading />}\r\n      {data &&\r\n        data.feed.entry.map((data) => {\r\n          if (data.gsx$active.$t === 'No') {\r\n            return (\r\n              <div key={data.gsx$alias.$t}>\r\n                <h3>{data.gsx$property.$t}</h3>\r\n                <Link to={`/view/${data.gsx$alias.$t}`}>View Brochure</Link>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Brochures;\r\n","import React from 'react';\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div>\r\n      <h1>Error 400: Page Not Found</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useFetch } from '../hooks/useFetch';\r\nimport Loading from './Loading';\r\n\r\nconst gsheetID = '1z-rXlasV9g2PerZz8uiVtuCEmY192U0LyJA3oWyo9i8';\r\nconst gsheetNum = '10';\r\nconst url = `https://spreadsheets.google.com/feeds/list/${gsheetID}/${gsheetNum}/public/values?alt=json`;\r\n\r\nconst Brochure = () => {\r\n  const { loading, data } = useFetch(url);\r\n\r\n  const { alias } = useParams();\r\n\r\n  const getBrochure = () => {\r\n    if (data) {\r\n      const single = data.feed.entry.find(\r\n        (data) => data.gsx$alias.$t === alias\r\n      );\r\n\r\n      return single;\r\n    }\r\n  };\r\n\r\n  const single = getBrochure();\r\n\r\n  return (\r\n    <div>\r\n      {loading && <Loading />}\r\n      {data && (\r\n        <div>\r\n          <h1>{single.gsx$property.$t}</h1>\r\n        </div>\r\n      )}\r\n      <h3>From Brochure Component</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Brochure;\r\n","import React from 'react';\nimport Brochures from './components/Brochures';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Error from './components/Error';\nimport Brochure from './components/Brochure';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/'>\n          <h1>From App.js component</h1>\n          <Brochures />\n        </Route>\n\n        <Route path='/view/:alias'>\n          <Brochure />\n        </Route>\n\n        <Route path='*'>\n          <Error />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}